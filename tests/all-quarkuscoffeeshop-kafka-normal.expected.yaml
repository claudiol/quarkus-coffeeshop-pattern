---
# Source: quarkuscoffeeshop-store-kafka/templates/kafdrop.yaml
kind: Service
apiVersion: v1
metadata:
  name: kafdrop
  labels:
    app: kafdrop
spec:
  ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    deploymentconfig: quarkus-cafe-events-kafdrop
---
# Source: quarkuscoffeeshop-store-kafka/templates/kafdrop.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: quarkus-cafe-events-kafdrop
  labels:
    app: kafdrop
  annotations:
    app.openshift.io/vcs-uri: 'https://github.com/obsidiandynamics/kafdrop'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    name: kafdrop
  template:
    metadata:
      name: kafdrop
      labels:
        name: kafdrop
    spec:
      containers:
        - name: kafdrop
          env:
            - name: KAFKA_BROKERCONNECT
              value: "cafe-cluster-kafka-bootstrap:9092"
          imagePullPolicy: IfNotPresent
          image: obsidiandynamics/kafdrop
          ports:
            - containerPort: 9000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /actuator/health
              port: 9000
              scheme: HTTP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /actuator/health
              port: 9000
              scheme: HTTP
  triggers:
    - type: ConfigChange
---
# Source: quarkuscoffeeshop-store-kafka/templates/amq-kafka-instance.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cafe-cluster
spec:
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    version: 3.1.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: route
        tls: true
    config:
      default.replication.factor: 3
      inter.broker.protocol.version: '3.1'
      min.insync.replicas: 2
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
    storage:
      type: ephemeral
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
---
# Source: quarkuscoffeeshop-store-kafka/templates/kafka-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: kafka-hub-ca-placement-binding
placementRef:
  name: kafka-hub-ca-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: kafka-hub-ca-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: quarkuscoffeeshop-store-kafka/templates/kafka-hub-ca-policy.yaml
# We need to run this on any managed cluster but not on the HUB
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: kafka-hub-ca-placement
spec:
  clusterSelector: {
  "matchExpressions": [
    {
      "key": "vendor",
      "operator": "In",
      "values": [
        "OpenShift"
      ]
    }
  ],
  "matchLabels": {
    "clusterGroup": "raleigh"
  }
}
---
# Source: quarkuscoffeeshop-store-kafka/templates/kafka-hub-ca-policy.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: kafka-hub-ca-policy
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: kafka-hub-ca
          annotations:
            apps.open-cluster-management.io/deployables: "secret"
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                type: Opaque
                metadata:
                  name: prod-kafka-cluster-cluster-ca-cert
                  namespace: coffeeshop-store
                apiVersion: v1
                data:
                  ca.crt: '{{hub index (lookup "v1" "Secret" "coffeeshop-store" "cafe-cluster-cluster-ca-cert").data "ca.crt" hub}}'
---
# Source: quarkuscoffeeshop-store-kafka/templates/kafdrop.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  labels:
    app: kafdrop
  name: kafdrop
spec:
  port:
    targetPort: 9000-tcp
  to:
    kind: Service
    name: kafdrop
    weight: 100
